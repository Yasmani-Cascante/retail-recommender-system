
# Primera etapa: Generar embeddings
FROM python:3.9-slim AS builder

WORKDIR /build

# Actualizar pip e instalar herramientas básicas
RUN pip install --no-cache-dir --upgrade pip wheel setuptools

# Instalar primero las versiones específicas de numpy y pandas para evitar problemas de compatibilidad
RUN pip install --no-cache-dir numpy==1.24.3 pandas==2.0.3

# Instalar scikit-learn con versión específica
RUN pip install --no-cache-dir scikit-learn==1.3.2

# Instalar torch (versión CPU para reducir tamaño)
RUN pip install --no-cache-dir torch==2.0.1 --extra-index-url https://download.pytorch.org/whl/cpu

# Instalar transformers y sentence-transformers con versiones específicas
RUN pip install --no-cache-dir transformers==4.30.2 sentence-transformers==2.2.2 scipy==1.10.1

# Instalar el resto de dependencias
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copiar solo el código necesario para la pre-computación
COPY precompute_embeddings.py .
COPY src/ src/

# Ejecutar script de pre-computación
RUN mkdir -p embeddings && python precompute_embeddings.py

# Segunda etapa: Imagen final más ligera
FROM python:3.9-slim

WORKDIR /app

# Actualizar pip e instalar herramientas básicas
RUN pip install --no-cache-dir --upgrade pip wheel setuptools

# Instalar dependencias necesarias para la API (sin sentence-transformers)
RUN pip install --no-cache-dir fastapi==0.115.7 uvicorn==0.34.0 scikit-learn==1.3.2 numpy==1.24.3

# Copiar solo lo necesario de la etapa de build
COPY --from=builder /build/embeddings /app/embeddings
COPY --from=builder /build/src /app/src

# Exponer el puerto de la API
EXPOSE 8080

# Variables de entorno
ENV PYTHONUNBUFFERED=1
ENV PORT=8080

# Comando para iniciar la API usando el main_precomputed
CMD ["uvicorn", "src.api.main_precomputed:app", "--host", "0.0.0.0", "--port", "8080"]
