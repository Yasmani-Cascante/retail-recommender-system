
# Primera etapa: Generar embeddings y código gRPC
FROM python:3.9-slim AS builder

WORKDIR /build

# Copiar requirements
COPY requirements.txt .

# Actualizar pip e instalar herramientas básicas
RUN pip install --no-cache-dir --upgrade pip wheel setuptools

# Instalar torch primero (versión CPU para reducir tamaño)
RUN pip install --no-cache-dir torch --extra-index-url https://download.pytorch.org/whl/cpu

# Instalar transformers, sentence-transformers y scipy específicamente
RUN pip install --no-cache-dir transformers sentence-transformers scipy==1.13.1

# Instalar el resto de dependencias
RUN pip install --no-cache-dir -r requirements.txt

# Instalar dependencias gRPC
RUN pip install --no-cache-dir grpcio grpcio-tools

# Copiar el código fuente y archivos proto
COPY . .

# Generar código gRPC
RUN python generate_grpc.py

# Ejecutar script de pre-computación
RUN python precompute_embeddings.py

# Segunda etapa: Imagen final más ligera
FROM python:3.9-slim

WORKDIR /app

# Actualizar pip e instalar herramientas básicas
RUN pip install --no-cache-dir --upgrade pip wheel setuptools

# Instalar dependencias necesarias para la API (sin sentence-transformers)
RUN pip install --no-cache-dir fastapi uvicorn scikit-learn numpy==1.24.3 redis grpcio

# Copiar solo lo necesario de la etapa de build
COPY --from=builder /build/embeddings /app/embeddings
COPY --from=builder /build/src /app/src
COPY --from=builder /build/recommendation_service_pb2.py /app/
COPY --from=builder /build/recommendation_service_pb2_grpc.py /app/

# Exponer puerto API
EXPOSE 8080

# Variables de entorno
ENV PYTHONUNBUFFERED=1
ENV PORT=8080

# Comando para iniciar la API
CMD ["uvicorn", "src.api.main_distributed:app", "--host", "0.0.0.0", "--port", "8080"]
